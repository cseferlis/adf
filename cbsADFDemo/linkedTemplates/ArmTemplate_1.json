{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "cbsADFDemo"
		},
		"srcComplaintsBlobZip_properties_typeProperties_fileName": {
			"type": "string",
			"defaultValue": "FLAT_CMPL.zip"
		},
		"srcComplaintsBlobZip_properties_typeProperties_folderPath": {
			"type": "string",
			"defaultValue": "adfdemoblob/downloads/folders/Complaints"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/srcComplaintsBlobZip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ComplaintsBlobZip",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SR"
				},
				"annotations": [],
				"type": "AzureBlob",
				"typeProperties": {
					"fileName": "[parameters('srcComplaintsBlobZip_properties_typeProperties_fileName')]",
					"folderPath": "[parameters('srcComplaintsBlobZip_properties_typeProperties_folderPath')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/srcComplaintsHttpZip')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "NHTSADownload",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "SR"
				},
				"annotations": [],
				"type": "HttpFile",
				"typeProperties": {
					"relativeUrl": "/downloads/folders/Complaints/FLAT_CMPL.zip",
					"requestMethod": "GET"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Archive Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFileToArchive",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink",
								"copyBehavior": "FlattenHierarchy"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true,
							"dataIntegrationUnits": 0
						},
						"inputs": [
							{
								"referenceName": "srcComplaintsBlobZip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ArchiveBlob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "SR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/srcComplaintsBlobZip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Union Complaints and tmpComplaints')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "srcComplaints",
								"type": "DatasetReference"
							},
							"name": "sqlComplaints"
						},
						{
							"dataset": {
								"referenceName": "srcCMPL_Temp",
								"type": "DatasetReference"
							},
							"name": "sqlCMPLTemp"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "srcComplaints",
								"type": "DatasetReference"
							},
							"name": "destComplaints"
						}
					],
					"transformations": [
						{
							"name": "unionComplaints"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Select2"
						}
					],
					"script": "source(output(\n\t\tComplaints_ID as integer,\n\t\tCMPLID as string,\n\t\tODINO as string,\n\t\tMFR_NAME as string,\n\t\tMAKETXT as string,\n\t\tMODELTXT as string,\n\t\tYEARTXT as string,\n\t\tCRASH as string,\n\t\tFAILDATE as string,\n\t\tFIRE as string,\n\t\tINJURED as decimal(18,0),\n\t\tDEATHS as decimal(18,0),\n\t\tCOMPDESC as string,\n\t\tCITY as string,\n\t\tSTATE as string,\n\t\tVIN as string,\n\t\tDATEA as string,\n\t\tLDATE as string,\n\t\tMILES as decimal(18,0),\n\t\tOCCURENCES as decimal(18,0),\n\t\tCDESCR as string,\n\t\tCMPL_TYPE as string,\n\t\tPOLICE_RPT_YN as string,\n\t\tPURCH_DT as string,\n\t\tORIG_OWNER_YN as string,\n\t\tANTI_BRAKES_YN as string,\n\t\tCRUISE_CONT_YN as string,\n\t\tNUM_CYLS as decimal(18,0),\n\t\tDRIVE_TRAIN as string,\n\t\tFUEL_SYS as string,\n\t\tFUEL_TYPE as string,\n\t\tTRANS_TYPE as string,\n\t\tVEH_SPEED as decimal(18,0),\n\t\tDOT as string,\n\t\tTIRE_SIZE as string,\n\t\tLOC_OF_TIRE as string,\n\t\tTIRE_FAIL_TYPE as string,\n\t\tORIG_EQUIP_YN as string,\n\t\tMANUF_DT as string,\n\t\tSEAT_TYPE as string,\n\t\tRESTRAINT_TYE as string,\n\t\tDEALER_NAME as string,\n\t\tDEALER_TEL as string,\n\t\tDEALER_CITY as string,\n\t\tDEALER_STATE as string,\n\t\tDEALER_ZIP as string,\n\t\tPROD_TYPE as string,\n\t\tREPAIRED_YN as string,\n\t\tMEDICAL_ATTN as string,\n\t\tVEHICLES_TOWED_YN as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sqlComplaints\nsource(output(\n\t\tComplaints_ID as integer,\n\t\tCMPLID as string,\n\t\tODINO as string,\n\t\tMFR_NAME as string,\n\t\tMAKETXT as string,\n\t\tMODELTXT as string,\n\t\tYEARTXT as string,\n\t\tCRASH as string,\n\t\tFAILDATE as string,\n\t\tFIRE as string,\n\t\tINJURED as decimal(18,0),\n\t\tDEATHS as decimal(18,0),\n\t\tCOMPDESC as string,\n\t\tCITY as string,\n\t\tSTATE as string,\n\t\tVIN as string,\n\t\tDATEA as string,\n\t\tLDATE as string,\n\t\tMILES as decimal(18,0),\n\t\tOCCURENCES as decimal(18,0),\n\t\tCDESCR as string,\n\t\tCMPL_TYPE as string,\n\t\tPOLICE_RPT_YN as string,\n\t\tPURCH_DT as string,\n\t\tORIG_OWNER_YN as string,\n\t\tANTI_BRAKES_YN as string,\n\t\tCRUISE_CONT_YN as string,\n\t\tNUM_CYLS as decimal(18,0),\n\t\tDRIVE_TRAIN as string,\n\t\tFUEL_SYS as string,\n\t\tFUEL_TYPE as string,\n\t\tTRANS_TYPE as string,\n\t\tVEH_SPEED as decimal(18,0),\n\t\tDOT as string,\n\t\tTIRE_SIZE as string,\n\t\tLOC_OF_TIRE as string,\n\t\tTIRE_FAIL_TYPE as string,\n\t\tORIG_EQUIP_YN as string,\n\t\tMANUF_DT as string,\n\t\tSEAT_TYPE as string,\n\t\tRESTRAINT_TYE as string,\n\t\tDEALER_NAME as string,\n\t\tDEALER_TEL as string,\n\t\tDEALER_CITY as string,\n\t\tDEALER_STATE as string,\n\t\tDEALER_ZIP as string,\n\t\tPROD_TYPE as string,\n\t\tREPAIRED_YN as string,\n\t\tMEDICAL_ATTN as string,\n\t\tVEHICLES_TOWED_YN as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: true,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> sqlCMPLTemp\nSelect1, Select2 union(byName: true)~> unionComplaints\nsqlComplaints select(mapColumn(\n\t\tCMPLID,\n\t\tODINO,\n\t\tMFR_NAME,\n\t\tMAKETXT,\n\t\tMODELTXT,\n\t\tYEARTXT,\n\t\tCRASH,\n\t\tFAILDATE,\n\t\tFIRE,\n\t\tINJURED,\n\t\tDEATHS,\n\t\tCOMPDESC,\n\t\tCITY,\n\t\tSTATE,\n\t\tVIN,\n\t\tDATEA,\n\t\tLDATE,\n\t\tMILES,\n\t\tOCCURENCES,\n\t\tCDESCR,\n\t\tCMPL_TYPE,\n\t\tPOLICE_RPT_YN,\n\t\tPURCH_DT,\n\t\tORIG_OWNER_YN,\n\t\tANTI_BRAKES_YN,\n\t\tCRUISE_CONT_YN,\n\t\tNUM_CYLS,\n\t\tDRIVE_TRAIN,\n\t\tFUEL_SYS,\n\t\tFUEL_TYPE,\n\t\tTRANS_TYPE,\n\t\tVEH_SPEED,\n\t\tDOT,\n\t\tTIRE_SIZE,\n\t\tLOC_OF_TIRE,\n\t\tTIRE_FAIL_TYPE,\n\t\tORIG_EQUIP_YN,\n\t\tMANUF_DT,\n\t\tSEAT_TYPE,\n\t\tRESTRAINT_TYE,\n\t\tDEALER_NAME,\n\t\tDEALER_TEL,\n\t\tDEALER_CITY,\n\t\tDEALER_STATE,\n\t\tDEALER_ZIP,\n\t\tPROD_TYPE,\n\t\tREPAIRED_YN,\n\t\tMEDICAL_ATTN,\n\t\tVEHICLES_TOWED_YN\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nsqlCMPLTemp select(mapColumn(\n\t\tCMPLID,\n\t\tODINO,\n\t\tMFR_NAME,\n\t\tMAKETXT,\n\t\tMODELTXT,\n\t\tYEARTXT,\n\t\tCRASH,\n\t\tFAILDATE,\n\t\tFIRE,\n\t\tINJURED,\n\t\tDEATHS,\n\t\tCOMPDESC,\n\t\tCITY,\n\t\tSTATE,\n\t\tVIN,\n\t\tDATEA,\n\t\tLDATE,\n\t\tMILES,\n\t\tOCCURENCES,\n\t\tCDESCR,\n\t\tCMPL_TYPE,\n\t\tPOLICE_RPT_YN,\n\t\tPURCH_DT,\n\t\tORIG_OWNER_YN,\n\t\tANTI_BRAKES_YN,\n\t\tCRUISE_CONT_YN,\n\t\tNUM_CYLS,\n\t\tDRIVE_TRAIN,\n\t\tFUEL_SYS,\n\t\tFUEL_TYPE,\n\t\tTRANS_TYPE,\n\t\tVEH_SPEED,\n\t\tDOT,\n\t\tTIRE_SIZE,\n\t\tLOC_OF_TIRE,\n\t\tTIRE_FAIL_TYPE,\n\t\tORIG_EQUIP_YN,\n\t\tMANUF_DT,\n\t\tSEAT_TYPE,\n\t\tRESTRAINT_TYE,\n\t\tDEALER_NAME,\n\t\tDEALER_TEL,\n\t\tDEALER_CITY,\n\t\tDEALER_STATE,\n\t\tDEALER_ZIP,\n\t\tPROD_TYPE,\n\t\tREPAIRED_YN,\n\t\tMEDICAL_ATTN,\n\t\tVEHICLES_TOWED_YN\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nunionComplaints sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tComplaints_ID as integer,\n\t\tCMPLID as string,\n\t\tODINO as string,\n\t\tMFR_NAME as string,\n\t\tMAKETXT as string,\n\t\tMODELTXT as string,\n\t\tYEARTXT as string,\n\t\tCRASH as string,\n\t\tFAILDATE as string,\n\t\tFIRE as string,\n\t\tINJURED as decimal(18,0),\n\t\tDEATHS as decimal(18,0),\n\t\tCOMPDESC as string,\n\t\tCITY as string,\n\t\tSTATE as string,\n\t\tVIN as string,\n\t\tDATEA as string,\n\t\tLDATE as string,\n\t\tMILES as decimal(18,0),\n\t\tOCCURENCES as decimal(18,0),\n\t\tCDESCR as string,\n\t\tCMPL_TYPE as string,\n\t\tPOLICE_RPT_YN as string,\n\t\tPURCH_DT as string,\n\t\tORIG_OWNER_YN as string,\n\t\tANTI_BRAKES_YN as string,\n\t\tCRUISE_CONT_YN as string,\n\t\tNUM_CYLS as decimal(18,0),\n\t\tDRIVE_TRAIN as string,\n\t\tFUEL_SYS as string,\n\t\tFUEL_TYPE as string,\n\t\tTRANS_TYPE as string,\n\t\tVEH_SPEED as decimal(18,0),\n\t\tDOT as string,\n\t\tTIRE_SIZE as string,\n\t\tLOC_OF_TIRE as string,\n\t\tTIRE_FAIL_TYPE as string,\n\t\tORIG_EQUIP_YN as string,\n\t\tMANUF_DT as string,\n\t\tSEAT_TYPE as string,\n\t\tRESTRAINT_TYE as string,\n\t\tDEALER_NAME as string,\n\t\tDEALER_TEL as string,\n\t\tDEALER_CITY as string,\n\t\tDEALER_STATE as string,\n\t\tDEALER_ZIP as string,\n\t\tPROD_TYPE as string,\n\t\tREPAIRED_YN as string,\n\t\tMEDICAL_ATTN as string,\n\t\tVEHICLES_TOWED_YN as string\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> destComplaints"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ComplainsCopyFromWebToBlob')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Truncate CMPL Temp",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_Truncate_CMPL_Temp]"
						},
						"linkedServiceName": {
							"referenceName": "cseferlistestdb1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Send Success Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Send Zip to Archive",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-02.eastus.logic.azure.com:443/workflows/8c6774ef72b341d49e189c6d9fc7227e/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=qsZ8iz5TeG70Iaf54sQ--KlybPeTAbpRgph4Emknezk",
							"method": "POST",
							"headers": {
								"Content-Type": "Application/json"
							},
							"body": {
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "Send Failure Email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Truncate CMPL Temp",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Union Complaints and tmpComplaints",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Move from Http to Blob as zip",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Unzip to SQL CMPL_Temp",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "Send Zip to Archive",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-03.eastus.logic.azure.com:443/workflows/8355738f60d84cce99d60f0dcb94cb4f/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=tdhxl4qxE72wxNMX6dxFoNdAlcVfsmz1_3khFhhtDYU",
							"method": "POST",
							"headers": {
								"Content-Type": "Application/json"
							},
							"body": {
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}",
								"receiver": "@pipeline().parameters.receiver"
							}
						}
					},
					{
						"name": "Union Complaints and tmpComplaints",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Unzip to SQL CMPL_Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Union Complaints and tmpComplaints",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sqlComplaints": {},
									"sqlCMPLTemp": {},
									"destComplaints": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Move from Http to Blob as zip",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Truncate CMPL Temp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "HttpSource",
								"httpRequestTimeout": "00:01:40"
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "srcComplaintsHttpZip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "destComplaintsZipBlob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Unzip to SQL CMPL_Temp",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Move from Http to Blob as zip",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "srcComplaintsBlob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "destComplaintsSQLTempTbl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send Zip to Archive",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Union Complaints and tmpComplaints",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BlobSource",
								"recursive": true
							},
							"sink": {
								"type": "BlobSink"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "srcComplaintsBlobZip",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ArchiveBlob",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"receiver": {
						"type": "String",
						"defaultValue": "cseferlis@gmail.com"
					}
				},
				"folder": {
					"name": "SR"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Union Complaints and tmpComplaints')]",
				"[concat(variables('factoryId'), '/datasets/srcComplaintsHttpZip')]",
				"[concat(variables('factoryId'), '/datasets/srcComplaintsBlobZip')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily Update')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ComplainsCopyFromWebToBlob",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2018-03-01T10:30:00",
						"timeZone": "EST",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								2
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/ComplainsCopyFromWebToBlob')]"
			]
		}
	]
}